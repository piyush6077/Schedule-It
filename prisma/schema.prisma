// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id            String        @id     @default(uuid())
  posts         Post[]     
  createdAT     DateTime      @default(now())
  email         String        @unique
  name          String 
  provider      Provider  
}



model Post {
  id            String        @id     @default(uuid())
  text          String?
  image         String?
  video         String?
  scheduleAt    DateTime
  createdAt     DateTime      @default(now())
  publishedAt   DateTime
  status        STATUS
  user          User          @relation(fields: [userId] , references: [id])
  userId        String
  platform      PostPlatform[]
}

//many-to-many join table
model PostPlatform {
  id              String        @id     @default(uuid())
  post            Post          @relation(fields: [postId] , references: [id])
  postId          String  
  platform        PLATFORM
  externalPostId  String?       //store the postId from external Api to track when the post is published
  publishedAt     DateTime

  @@unique([postId , platform])     //Prevent duplicate Post-platform relationship
}


enum PLATFORM {
  INSTAGRAM
  YOUTUBE
  FACEBOOK
}

enum STATUS {
  Pending
  Draft
  Scheduled
  Published 
}

enum Provider {
  GOOGLE
}